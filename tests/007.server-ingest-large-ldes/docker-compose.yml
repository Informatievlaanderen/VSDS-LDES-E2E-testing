networks:
  ldes:
    name: ${USECASE_NAME:-gtfs-ingest-ldes}_network


services:

  gtfs2ldes-js:
    container_name: ${USECASE_NAME:-gtfs-ingest-ldes}_gtfs2ldes-js
    image: ghcr.io/julianrojas87/gtfs2ldes-js:${GTFS2LDES_TAG:-latest}
    environment:
      - NODE_OPTIONS=${NODE_OPTIONS:-}
      - GTFS_SOURCE=${GTFS_SOURCE:-https://www.rtd-denver.com/files/gtfs/bustang-co-us.zip}
      - GTFSRT_SOURCE=${GTFSRT_SOURCE:-https://www.rtd-denver.com/files/bustang/gtfs-rt/Bustang_TripUpdate.pb}
      - BASE_IRI=${GTFS_BASE_IRI:-http://www.rtd-denver.com/}
      - TARGET_URL=http://ldio-workbench:8080/connections-pipeline
      - GTFS_CRON=${GTFS_CRON:-0 0 3 1 * *}
      - GTFSRT_CRON=${GTFSRT_CRON:-*/30 * * * * *}
      - RUN_ON_LAUNCH=${RUN_ON_LAUNCH:-true}
      - THROTTLE_RATE=${THROTTLE_RATE:-100}
      - AUTH_HEADER=${AUTH_HEADER:-}
      - AUTH_HEADER_VALUE=${AUTH_HEADER_VALUE:-}
    volumes:
      - ./gtfs/config.json:/opt/gtfs2ldes/config.json:rw
    networks:
      - ldes
    profiles:
      - delay-started


  ldio-workbench:
    container_name: ${USECASE_NAME:-gtfs-ingest-ldes}_ldio-workbench
    image: ${LDI_ORCHESTRATOR:-ghcr.io/informatievlaanderen/ldi-orchestrator}:${LDI_ORCHESTRATOR_TAG:-latest}
    ports:
      - 8081:8080
    volumes:
      - ./ldio-workflow.config.yml:/ldio/application.yml:ro
    environment:
      - SERVER_PORT=8080
    networks:
      - ldes
  
  
  ldes-server:
    container_name: ${USECASE_NAME:-gtfs-ingest-ldes}_ldes-server
    image: ${LDES_SERVER:-ghcr.io/informatievlaanderen/ldes-server}:${LDES_SERVER_TAG:-latest}
    environment:
      - SIS_DATA=/tmp
      - MANAGEMENT_TRACING_ENABLED=false
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health
      - SERVER_PORT=8080
      - LDESSERVER_HOSTNAME=http://localhost:8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ldes-postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PWD}
      - SPRING_BATCH_JDBC_INITIALIZESCHEMA=always
    volumes:
      - ./config/ldes-server.config.yml:/application.yml:ro
      - ../../data/epsg:/tmp/Databases:rw
    ports:
      - 8080:8080
    networks:
      - ldes
    depends_on:
      - ldes-postgres
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://ldes-server:8080/actuator/health"]
      interval: 12s
      timeout: 3s
      retries: 20


  ldes-postgres:
    container_name: ${USECASE_NAME:-gtfs-ingest-ldes}_ldes-postgres
    image: postgres:14-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PWD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - ldes
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5


  postgrest:
    container_name: ${USECASE_NAME:-gtfs-ingest-ldes}_postgres-rest-api
    image: postgrest/postgrest:latest
    ports:
      - "9018:3000"
    # Available environment variables documented here:
    # https://postgrest.org/en/latest/configuration.html#environment-variables
    environment:
      # The standard connection URI format, documented at
      # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PWD}@ldes-postgres:5432/${POSTGRES_DB}
      - PGRST_DB_ANON_ROLE=${POSTGRES_USER}
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:9018
    depends_on:
      - ldes-postgres
    networks:
      - ldes
