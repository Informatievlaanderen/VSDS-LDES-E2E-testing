server:
  port: 8080
orchestrator:
  pipelines:
    - name: connections-pipeline
      description: "This pipeline uses a HTTP listener to read incoming connections, anonimizes the stops and then forward them to a LDES Server"
      input:
        name: Ldio:HttpIn
        adapter:
          name: Ldio:RdfAdapter
      transformers:
        - name: Ldio:SparqlConstructTransformer # replace departure and arrival stops by blank nodes
          config:
            query: |
              PREFIX lc:   <http://semweb.mmlab.be/ns/linkedconnections#> 
              PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX gtfs: <http://vocab.gtfs.org/terms#>
              CONSTRUCT {
                ?cs ?cp ?co.
                ?cs lc:departureStop ?ds .
                ?cs lc:arrivalStop ?as .
                ?ds ?dp ?do .
                ?as ?ap ?ao .
              } WHERE {
                ?cs rdf:type lc:Connection.  
                ?cs lc:departureStop ?d .
                bind(bnode() as ?ds) .
                ?cs lc:arrivalStop ?a .
                bind(bnode() as ?as) .
                ?cs ?cp ?co .
                filter(?cp != lc:departureStop) .
                filter(?cp != lc:arrivalStop) .
                ?d ?dp ?do .
                ?a ?ap ?ao .
              }
      outputs:
        - name: Ldio:HttpOut
          config:
            endpoint: http://ldes-server:8080/connections
            rdf-writer:
              content-type: application/rdf+protobuf
