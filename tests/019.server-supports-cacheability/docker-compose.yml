version: '3.3'
services:

  ldes-server:
    container_name: ${USECASE_NAME:-setup-caching}_ldes-server
    image: ${LDES_SERVER:-ghcr.io/informatievlaanderen/ldes-server}:${LDES_SERVER_TAG:-latest}
    environment:
      - SIS_DATA=/tmp
    volumes:
      - ./config/ldes-server.config.yml:/application.yml:ro
      - ../../data/epsg:/tmp/Databases:rw
    networks:
      - ldes
    depends_on:
      - ldes-mongodb

  ldes-mongodb:
    container_name: ${USECASE_NAME:-setup-caching}_ldes-mongodb
    image: mongo:${MONGODB_TAG:-latest}
    ports:
      - ${MONGODB_PORT:-27017}:27017
    networks:
      - ldes

  nginx:
    image: nginx:${NGINX_TAG:-1.23.3}
    container_name: ${USECASE_NAME:-setup-caching}_nginx
    ports:
      - ${NGINX_PORT:-8080}:8080
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/fwd-ldes-server.conf:ro
    depends_on:
      - ldes-server
    networks:
      - ldes
    
  ldio-workbench:
    image: ${LDI_ORCHESTRATOR:-ghcr.io/informatievlaanderen/ldi-orchestrator}:${LDI_ORCHESTRATOR_TAG:-latest}
    container_name: ${USECASE_NAME:-setup-caching}_ldio-workbench
    volumes:
      - ./ldio-workflow.config.yml:/ldio/application.yml:ro
    profiles:
      - delay-started
    # use the network stack of the nginx service so that 
    # localhost refers to nginx and we can follow the LDES stream both from the host as from within the CLI
    network_mode: service:nginx

networks:
  ldes:
    name: ${USECASE_NAME:-setup-caching}_network
