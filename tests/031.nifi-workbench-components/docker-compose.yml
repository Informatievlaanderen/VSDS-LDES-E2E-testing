
networks:
  ldes:
    name: nifi-components_ldes_network
    

services:

  test-message-generator:
    container_name: nifi-components_test-message-generator
    image: ghcr.io/informatievlaanderen/test-message-generator:${TEST_MESSAGE_GENERATOR_TAG:-latest}
    environment:
      - TARGETURL=http://nifi-workbench:9005/observations
      - SILENT=false
      - CRON=* * * * * *
      - TEMPLATEFILE=/tmp/data/template.json
      - MIMETYPE=application/json
    volumes:
      - ./generator/template.json:/tmp/data/template.json:ro
    networks:
      - ldes
    profiles:
      - delay-started


  nifi-workbench:
    container_name: nifi-components_nifi-workbench
    image: apache/nifi:${NIFI_TAG:-2.0.0-M4}
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=${NIFI_USER}
      - SINGLE_USER_CREDENTIALS_PASSWORD=${NIFI_PWD}
      - NIFI_WEB_HTTPS_PORT=8443
    volumes:
      - ./workbench/check-healthy.sh:/opt/nifi/nifi-current/bin/check-healthy.sh:ro
      - ./workbench/nifi-env.sh:/opt/nifi/nifi-current/bin/nifi-env.sh:ro
      - ./temp:/opt/nifi/nifi-current/nar_extensions:rw
    ports:
      - 8443:8443
      - 9005:9005
    networks:
      - ldes
    extra_hosts:
      - ${HOSTNAME}:host-gateway
    healthcheck:
      start_period: 15s
      test: /opt/nifi/nifi-current/bin/check-healthy.sh
      interval: 3s
      timeout: 3s
      retries: 20


  ldes-server:
    container_name: nifi-components_ldes-server
    image: ghcr.io/informatievlaanderen/ldes-server:${LDES_SERVER_TAG:-latest}
    environment:
      - SIS_DATA=/tmp
      - LDESSERVER_HOSTNAME=http://${HOSTNAME}:8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ldes-postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PWD}
      - SPRING_BATCH_JDBC_INITIALIZESCHEMA=ALWAYS
      - MANAGEMENT_TRACING_ENABLED=false
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info
    volumes:
      - ./server/config.yml:/application.yml:ro
      - ../../data/epsg:/tmp/Databases:rw
    ports:
      - 8080:8080
    networks:
      - ldes
    depends_on:
      - ldes-postgres
    healthcheck:
      start_period: 30s
      test: wget -qO- http://ldes-server:8080/actuator/health
      interval: 12s
      timeout: 3s
      retries: 20


  ldes-postgres:
    container_name: nifi-components_ldes-postgres
    image: postgres:14-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PWD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - ldes


  postgrest:
    container_name: nifi-components_postgres-rest-api
    image: postgrest/postgrest:latest
    ports:
      - 9018:3000
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PWD}@ldes-postgres:5432/${POSTGRES_DB}
      - PGRST_DB_ANON_ROLE=admin
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:9018
    depends_on:
      - ldes-postgres
    networks:
      - ldes


  test-message-sink:
    container_name: nifi-components_test-message-sink
    image: ghcr.io/informatievlaanderen/test-message-sink:${TEST_MESSAGE_SINK_TAG:-latest}
    environment:
      - SILENT=false
      - MEMORY=false
      - CONNECTION_URI=mongodb://ldes-mongodb:27017
      - DATABASE_NAME=iow_sink
      - COLLECTION_NAME=observations
      - MEMBER_TYPE=http://www.w3.org/ns/sosa/ObservationCollection
    ports:
      - 9003:80
    networks:
      - ldes
    healthcheck:
      start_period: 15s
      test: curl -f -s http://test-message-sink
      interval: 3s
      timeout: 3s
      retries: 5


  ldes-mongodb:
    container_name: nifi-components_ldes-mongodb
    image: mongo:${MONGODB_TAG:-latest}
    ports:
      - 27017:27017
    networks:
      - ldes
    healthcheck:
      start_period: 15s
      test: echo 'db.runCommand("ping").ok' | mongosh ldes-mongodb:27017/test --quiet
      interval: 3s
      timeout: 3s
      retries: 5


  ldes-graphdb:
    container_name: nifi-components_graphdb
    image: vsds/graphdb-free:${GRAPHDB_TAG:-10.6.2}
    build:
      dockerfile_inline: |
        FROM khaller/graphdb-free:${GRAPHDB_TAG:-10.6.2}
        RUN apt update && apt upgrade -y
        RUN apt install -y curl
    volumes:
      - ./graphdb/config.ttl:/repository.init/observations/config.ttl:ro
    ports:
      - 7200:7200
    networks:
      - ldes
    healthcheck:
      start_period: 15s
      test: 'curl -s -f "http://ldes-graphdb:7200/repositories/observations/size"'
      interval: 3s
      timeout: 3s
      retries: 10
