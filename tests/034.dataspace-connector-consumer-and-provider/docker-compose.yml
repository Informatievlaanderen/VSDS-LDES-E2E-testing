
services:

  provider-connector:
    container_name: provider-connector
    image: ghcr.io/informatievlaanderen/vsds-dataspace-connector/http-pull:latest
    environment:
      - EDC_FS_CONFIG=/resources/provider-configuration.properties
      - EDC_KEYSTORE=/certs/cert.pfx
      - EDC_KEYSTORE_PASSWORD=123456
      - EDC_VAULT=/resources/provider-vault.properties
    ports:
      - 19191:19191
      - 19193:19193
      - 19194:19194
      - 19291:19291
      - 19192:19192
    volumes:
      - ./http-pull-provider:/resources
      - ./certs:/certs
    networks:
      - ldes

  consumer-connector:
    container_name: consumer-connector
    image: ghcr.io/informatievlaanderen/vsds-dataspace-connector/http-pull:latest
    environment:
      - EDC_FS_CONFIG=/resources/consumer-configuration.properties
      - EDC_KEYSTORE=/certs/cert.pfx
      - EDC_KEYSTORE_PASSWORD=123456
      - EDC_VAULT=/resources/consumer-vault.properties
    ports:
      - 29191:29191
      - 29193:29193
      - 29194:29194
      - 29291:29291
      - 29192:29192
    volumes:
      - ./http-pull-consumer:/resources
      - ./certs:/certs
    networks:
      - ldes

  test-message-generator:
    container_name: connector_test-message-generator
    image: ghcr.io/informatievlaanderen/test-message-generator:latest
    environment:
      - TARGETURL=http://ldio-server-seeder:8080/seed-server
      - SILENT=false
      - CRON=* * * * * *
      - TEMPLATEFILE=/tmp/data/device.template.json
      - MIMETYPE=application/ld+json
    volumes:
      - ./data/device.template.json:/tmp/data/device.template.json:ro
    networks:
      - ldes
    profiles:
      - delay-started

  ldio-server-seeder:
    image: ghcr.io/informatievlaanderen/ldi-orchestrator:latest
    container_name: connector_ldio-server-seeder
    volumes:
      - ./ldio-server-seeder.yml:/ldio/config/application.yml:ro
    networks:
      - ldes
    depends_on:
      - ldes-server

  ldes-server:
    container_name: ${USECASE_NAME:-connector}_ldes-server
    image: ${LDES_SERVER:-ghcr.io/informatievlaanderen/ldes-server}:${LDES_SERVER_TAG:-latest}
    environment:
      - SIS_DATA=/tmp
      - MANAGEMENT_TRACING_ENABLED=false
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health
      - SERVER_PORT=8080
      - LDESSERVER_HOSTNAME=http://localhost:8082
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ldes-postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PWD}
      - SPRING_BATCH_JDBC_INITIALIZESCHEMA=always
    volumes:
      - ./config/ldes-server.config.yml:/application.yml:ro
      - ../../data/epsg:/tmp/Databases:rw
    networks:
      - ldes
    ports:
      - 8082:8080 # needed for admin API
    depends_on:
      - ldes-postgres
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://ldes-server:8080/actuator/health"]
      interval: 12s
      timeout: 3s
      retries: 20

  
  ldes-postgres:
    container_name: ldes-postgres
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PWD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - ldes

  postgrest:
    container_name: postgres-rest-api
    image: postgrest/postgrest:latest
    ports:
      - "9018:3000"
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PWD}@ldes-postgres:5432/${POSTGRES_DB}
      - PGRST_DB_ANON_ROLE=${POSTGRES_USER}
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:9018
    depends_on:
      - ldes-postgres
    networks:
      - ldes

  ldio-workbench:
    image: ${LDIO_WORKBENCH:-ghcr.io/informatievlaanderen/ldi-orchestrator}:${LDIO_WORKBENCH_TAG:-latest}
    container_name: connector_ldio-workbench
    environment:
      - SPRING_CONFIG_NAME=application
      - SPRING_CONFIG_LOCATION=/config/
      - SERVER_PORT=8080
    volumes:
      - ./ldio-config.yml:/config/application.yml:ro
    ports:
      - 8081:8080
    networks:
      - ldes
    profiles:
      - delay-started

  did-server:
    # provides DID Web for connectors
    container_name: did-server
    image: nginx
    volumes:
      - ./webdid:/usr/share/nginx/html
    networks:
      - ldes
    ports:
      - "8080:80"

networks:
  ldes:
    name: ldes_connector_network
