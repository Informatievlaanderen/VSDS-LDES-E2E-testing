version: '3.3'
services:

  provider-connector:
    container_name: provider-connector
    image: ghcr.io/informatievlaanderen/vsds-dataspace-connector/http-pull:latest
    environment:
      - EDC_FS_CONFIG=/resources/provider-configuration.properties

      - EDC_KEYSTORE=/certs/cert.pfx
      - EDC_KEYSTORE_PASSWORD=123456
      - EDC_VAULT=/resources/provider-vault.properties
    ports:
      - 19191:19191
      - 19193:19193
      - 19194:19194
      - 19291:19291
      - 19192:19192
    volumes:
      - ./http-pull-provider:/resources
      - ./certs:/certs
    networks:
      - ldes

  consumer-connector:
    container_name: consumer-connector
    image: ghcr.io/informatievlaanderen/vsds-dataspace-connector/http-pull:latest
    environment:
      - EDC_FS_CONFIG=/resources/consumer-configuration.properties

      - EDC_KEYSTORE=/certs/cert.pfx
      - EDC_KEYSTORE_PASSWORD=123456
      - EDC_VAULT=/resources/consumer-vault.properties
    ports:
      - 29191:29191
      - 29193:29193
      - 29194:29194
      - 29291:29291
      - 29192:29192
    volumes:
      - ./http-pull-consumer:/resources
      - ./certs:/certs
    networks:
      - ldes

  federated-authority:
    container_name: federated-authority
    image: ghcr.io/informatievlaanderen/vsds-dataspace-connector/federated-authority:latest
    environment:
      - EDC_FS_CONFIG=/resources/authority-configuration.properties
      - FCC_DIRECTORY_FILE=/resources/nodes-dc.json

      - EDC_KEYSTORE=/certs/cert.pfx
      - EDC_KEYSTORE_PASSWORD=123456
      - EDC_VAULT=/resources/authority-vault.properties
    depends_on: [ provider-connector ]
    volumes:
      - ./federated-authority:/resources
      - ./certs:/certs
    ports:
      - "38180:8180"
      - "38181:8181"
    networks:
      - ldes

  test-message-generator:
    container_name: connector_test-message-generator
    image: ghcr.io/informatievlaanderen/test-message-generator:latest
    environment:
      - TARGETURL=http://ldio-server-seeder:8080/seed-server
      - SILENT=false
      - CRON=* * * * * *
      - TEMPLATEFILE=/tmp/data/device.template.json
      - MIMETYPE=application/ld+json
    volumes:
      - ./data/device.template.json:/tmp/data/device.template.json:ro
    networks:
      - ldes
    profiles:
      - delay-started

  ldio-server-seeder:
    image: ghcr.io/informatievlaanderen/ldi-orchestrator:latest
    container_name: connector_ldio-server-seeder
    volumes:
      - ./ldio-server-seeder.yml:/ldio/config/application.yml:ro
    networks:
      - ldes
    depends_on:
      - ldes-server

  ldes-server:
    container_name: ${USECASE_NAME:-connector}_ldes-server
    image: ldes/ldes-server:2.10.0
    environment:
      - SIS_DATA=/tmp
    volumes:
      - ./config/ldes-server.config.yml:/application.yml:ro
      - ../../data/epsg:/tmp/Databases:rw
    networks:
      - ldes
    ports:
      - 8081:8081 # needed for admin API
    depends_on:
      - ldes-mongodb

  ldes-mongodb:
    container_name: connector_ldes-mongodb
    image: mongo:latest
    ports:
      - 27017:27017
    networks:
      - ldes

  mongodb-rest-api:
    container_name: ${USECASE_NAME:-connector}_mongodb-rest-api
    image: ghcr.io/informatievlaanderen/mongodb-rest-api:${MONGODB_REST_API_TAG:-latest}
    environment:
      - SILENT=false
      - CONNECTION_URI=mongodb://ldes-mongodb:27017
    ports:
      - ${MONGODB_REST_API_PORT:-9019}:80
    networks:
      - ldes

  nifi-workbench:
    image: ldes/ldi-workbench-nifi:2.0.0
    container_name: connector_nifi-workbench
    environment:
      - NIFI_WEB_HTTP_PORT=8000
    volumes:
      - ../../data/scripts/nifi-env.sh:/opt/nifi/nifi-current/bin/nifi-env.sh:ro
    ports:
      - 8000:8000
      - 8082:8080
    networks:
      - ldes
    profiles:
      - delay-started

  ldio-workbench:
    image: ghcr.io/informatievlaanderen/ldi-orchestrator:latest
    container_name: connector_ldio-workbench
    environment:
      - SPRING_CONFIG_NAME=application
      - SPRING_CONFIG_LOCATION=/config/
    volumes:
      - ./ldio-config.yml:/config/application.yml:ro
    ports:
      - 8082:8082
    networks:
      - ldes
    profiles:
      - delay-started

  did-server:
    # provides DID Web for connectors
    container_name: did-server
    image: nginx
    volumes:
      - ./webdid:/usr/share/nginx/html
    networks:
      - ldes
    ports:
      - "8080:80"

networks:
  ldes:
    name: ldes_connector_network
